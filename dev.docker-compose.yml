networks:
  dev-silo:

services:
  frontend:
    build:
      context: src/frontend # Path to your React application Dockerfile
      dockerfile: dev.Dockerfile
      args:
        - BACKEND_URL=http://backend:7860
    depends_on:
      - backend
    environment:
      - VITE_PROXY_TARGET=http://backend:7860
    ports:
      - "8080:3000"  # Maps Nginx 80 to localhost 3000
    volumes:
      - ./src/frontend/public:/home/node/app/public
      - ./src/frontend/src:/home/node/app/src
      - ./src/frontend/package.json:/home/node/app/package.json
    restart: on-failure
    networks:
      - dev-silo

  backend:
    build:
      context: src/backend  # Path to your Spring Boot application Dockerfile
      dockerfile: dev.Dockerfile
    environment:
      #JAVA_OPTS: '-Xms100m -Xmx1000m -Xmn100m -Xss256k -XX:MetaspaceSize=10m -XX:MaxMetaspaceSize=250m'
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-database:5432/siloDb
      SPRING_DATASOURCE_USERNAME: siloUser
      SPRING_DATASOURCE_PASSWORD: 0P0lacam!
      # SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # SPRING_PROFILES_ACTIVE: dev
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 2s
      timeout: 3s
      retries: 5
      start_period: 2s
    ports:
      - "3000:3000"
    depends_on:
      - postgres-database
    networks:
      - dev-silo

  postgres-database:
    image: postgres:17
    environment:
      POSTGRES_USER: siloUser
      POSTGRES_PASSWORD: 0P0lacam!
      POSTGRES_DB: siloDb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d siloDb -U siloUser"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - dev-silo
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
