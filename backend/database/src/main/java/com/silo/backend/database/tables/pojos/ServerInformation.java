/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.pojos;


import com.silo.backend.database.tables.interfaces.IServerInformation;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.sql.Date;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "server_information"
)
public record ServerInformation(
    @Nullable Long id,
    @Nonnull String hostname,
    @Nullable String operatingSystem,
    @Nonnull String location,
    @Nonnull String operatingSystemVersion,
    @Nonnull String country,
    @Nullable Boolean isVirtual,
    @Nullable String provenance,
    @Nullable Date osEndOfLifeDate,
    @Nullable Date hwEndOfLifeDate,
    @Nullable String lifecycleStatus,
    @Nullable String externalId
) implements IServerInformation {

    private static final long serialVersionUID = 1L;


    /**
     * Getter for <code>server_information.id</code>.
     */
    @Column(name = "id")
    @Nullable
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>server_information.hostname</code>.
     */
    @Column(name = "hostname", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    @Override
    public String getHostname() {
        return this.hostname;
    }

    /**
     * Getter for <code>server_information.operating_system</code>.
     */
    @Column(name = "operating_system", length = 128)
    @Size(max = 128)
    @Nullable
    @Override
    public String getOperatingSystem() {
        return this.operatingSystem;
    }

    /**
     * Getter for <code>server_information.location</code>.
     */
    @Column(name = "location", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    @Override
    public String getLocation() {
        return this.location;
    }

    /**
     * Getter for <code>server_information.operating_system_version</code>.
     */
    @Column(name = "operating_system_version", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    @Override
    public String getOperatingSystemVersion() {
        return this.operatingSystemVersion;
    }

    /**
     * Getter for <code>server_information.country</code>.
     */
    @Column(name = "country", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    @Override
    public String getCountry() {
        return this.country;
    }

    /**
     * Getter for <code>server_information.is_virtual</code>.
     */
    @Column(name = "is_virtual")
    @Nullable
    @Override
    public Boolean getIsVirtual() {
        return this.isVirtual;
    }

    /**
     * Getter for <code>server_information.provenance</code>.
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getProvenance() {
        return this.provenance;
    }

    /**
     * Getter for <code>server_information.os_end_of_life_date</code>.
     */
    @Column(name = "os_end_of_life_date")
    @Nullable
    @Override
    public Date getOsEndOfLifeDate() {
        return this.osEndOfLifeDate;
    }

    /**
     * Getter for <code>server_information.hw_end_of_life_date</code>.
     */
    @Column(name = "hw_end_of_life_date")
    @Nullable
    @Override
    public Date getHwEndOfLifeDate() {
        return this.hwEndOfLifeDate;
    }

    /**
     * Getter for <code>server_information.lifecycle_status</code>.
     */
    @Column(name = "lifecycle_status", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getLifecycleStatus() {
        return this.lifecycleStatus;
    }

    /**
     * Getter for <code>server_information.external_id</code>.
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    @Override
    public String getExternalId() {
        return this.externalId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ServerInformation other = (ServerInformation) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.hostname == null) {
            if (other.hostname != null)
                return false;
        }
        else if (!this.hostname.equals(other.hostname))
            return false;
        if (this.operatingSystem == null) {
            if (other.operatingSystem != null)
                return false;
        }
        else if (!this.operatingSystem.equals(other.operatingSystem))
            return false;
        if (this.location == null) {
            if (other.location != null)
                return false;
        }
        else if (!this.location.equals(other.location))
            return false;
        if (this.operatingSystemVersion == null) {
            if (other.operatingSystemVersion != null)
                return false;
        }
        else if (!this.operatingSystemVersion.equals(other.operatingSystemVersion))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        if (this.isVirtual == null) {
            if (other.isVirtual != null)
                return false;
        }
        else if (!this.isVirtual.equals(other.isVirtual))
            return false;
        if (this.provenance == null) {
            if (other.provenance != null)
                return false;
        }
        else if (!this.provenance.equals(other.provenance))
            return false;
        if (this.osEndOfLifeDate == null) {
            if (other.osEndOfLifeDate != null)
                return false;
        }
        else if (!this.osEndOfLifeDate.equals(other.osEndOfLifeDate))
            return false;
        if (this.hwEndOfLifeDate == null) {
            if (other.hwEndOfLifeDate != null)
                return false;
        }
        else if (!this.hwEndOfLifeDate.equals(other.hwEndOfLifeDate))
            return false;
        if (this.lifecycleStatus == null) {
            if (other.lifecycleStatus != null)
                return false;
        }
        else if (!this.lifecycleStatus.equals(other.lifecycleStatus))
            return false;
        if (this.externalId == null) {
            if (other.externalId != null)
                return false;
        }
        else if (!this.externalId.equals(other.externalId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.hostname == null) ? 0 : this.hostname.hashCode());
        result = prime * result + ((this.operatingSystem == null) ? 0 : this.operatingSystem.hashCode());
        result = prime * result + ((this.location == null) ? 0 : this.location.hashCode());
        result = prime * result + ((this.operatingSystemVersion == null) ? 0 : this.operatingSystemVersion.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.isVirtual == null) ? 0 : this.isVirtual.hashCode());
        result = prime * result + ((this.provenance == null) ? 0 : this.provenance.hashCode());
        result = prime * result + ((this.osEndOfLifeDate == null) ? 0 : this.osEndOfLifeDate.hashCode());
        result = prime * result + ((this.hwEndOfLifeDate == null) ? 0 : this.hwEndOfLifeDate.hashCode());
        result = prime * result + ((this.lifecycleStatus == null) ? 0 : this.lifecycleStatus.hashCode());
        result = prime * result + ((this.externalId == null) ? 0 : this.externalId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ServerInformation (");

        sb.append(id);
        sb.append(", ").append(hostname);
        sb.append(", ").append(operatingSystem);
        sb.append(", ").append(location);
        sb.append(", ").append(operatingSystemVersion);
        sb.append(", ").append(country);
        sb.append(", ").append(isVirtual);
        sb.append(", ").append(provenance);
        sb.append(", ").append(osEndOfLifeDate);
        sb.append(", ").append(hwEndOfLifeDate);
        sb.append(", ").append(lifecycleStatus);
        sb.append(", ").append(externalId);

        sb.append(")");
        return sb.toString();
    }
}
