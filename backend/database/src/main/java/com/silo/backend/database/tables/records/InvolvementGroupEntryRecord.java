/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.records;


import com.silo.backend.database.tables.InvolvementGroupEntry;
import com.silo.backend.database.tables.interfaces.IInvolvementGroupEntry;

import jakarta.annotation.Nonnull;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * describes the association of an involvement kind to an involvement group
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "involvement_group_entry"
)
public class InvolvementGroupEntryRecord extends TableRecordImpl<InvolvementGroupEntryRecord> implements IInvolvementGroupEntry {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>involvement_group_entry.involvement_group_id</code>.
     * identifier of the group this involvement kind is included in
     */
    public InvolvementGroupEntryRecord setInvolvementGroupId(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group_entry.involvement_group_id</code>.
     * identifier of the group this involvement kind is included in
     */
    @Column(name = "involvement_group_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getInvolvementGroupId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>involvement_group_entry.involvement_kind_id</code>.
     * identifier of the involvement kind this entry refers to
     */
    public InvolvementGroupEntryRecord setInvolvementKindId(@Nonnull Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group_entry.involvement_kind_id</code>.
     * identifier of the involvement kind this entry refers to
     */
    @Column(name = "involvement_kind_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getInvolvementKindId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IInvolvementGroupEntry from) {
        setInvolvementGroupId(from.getInvolvementGroupId());
        setInvolvementKindId(from.getInvolvementKindId());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvolvementGroupEntryRecord
     */
    public InvolvementGroupEntryRecord() {
        super(InvolvementGroupEntry.INVOLVEMENT_GROUP_ENTRY);
    }

    /**
     * Create a detached, initialised InvolvementGroupEntryRecord
     */
    @ConstructorProperties({ "involvementGroupId", "involvementKindId" })
    public InvolvementGroupEntryRecord(@Nonnull Long involvementGroupId, @Nonnull Long involvementKindId) {
        super(InvolvementGroupEntry.INVOLVEMENT_GROUP_ENTRY);

        setInvolvementGroupId(involvementGroupId);
        setInvolvementKindId(involvementKindId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InvolvementGroupEntryRecord
     */
    public InvolvementGroupEntryRecord(com.silo.backend.database.tables.pojos.InvolvementGroupEntry value) {
        super(InvolvementGroupEntry.INVOLVEMENT_GROUP_ENTRY);

        if (value != null) {
            setInvolvementGroupId(value.involvementGroupId());
            setInvolvementKindId(value.involvementKindId());
            resetChangedOnNotNull();
        }
    }
}
