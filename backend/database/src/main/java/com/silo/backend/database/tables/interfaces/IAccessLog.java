/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * logs user page and section views
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "access_log"
)
public interface IAccessLog extends Serializable {

    /**
     * Getter for <code>access_log.id</code>.
     */
    @Column(name = "id")
    @Nullable
    public Integer getId();

    /**
     * Getter for <code>access_log.user_id</code>. identifier of the user
     * accessing the page or section
     */
    @Column(name = "user_id", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getUserId();

    /**
     * Getter for <code>access_log.state</code>. identifier of the page  plus
     * optionally a section identifier (format: state|section)
     */
    @Column(name = "state", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getState();

    /**
     * Getter for <code>access_log.params</code>. additional params provided to
     * page/section
     */
    @Column(name = "params", length = 1024)
    @Size(max = 1024)
    @Nullable
    public String getParams();

    /**
     * Getter for <code>access_log.created_at</code>.
     */
    @Column(name = "created_at", precision = 6)
    @Nullable
    public Timestamp getCreatedAt();
}
