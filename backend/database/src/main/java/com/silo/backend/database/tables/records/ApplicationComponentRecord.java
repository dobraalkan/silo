/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.records;


import com.silo.backend.database.tables.ApplicationComponent;
import com.silo.backend.database.tables.interfaces.IApplicationComponent;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "application_component"
)
public class ApplicationComponentRecord extends TableRecordImpl<ApplicationComponentRecord> implements IApplicationComponent {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>application_component.id</code>.
     */
    public ApplicationComponentRecord setId(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>application_component.id</code>.
     */
    @Column(name = "id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>application_component.application_id</code>.
     */
    public ApplicationComponentRecord setApplicationId(@Nullable Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>application_component.application_id</code>.
     */
    @Column(name = "application_id")
    @Nullable
    @Override
    public Long getApplicationId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IApplicationComponent from) {
        setId(from.getId());
        setApplicationId(from.getApplicationId());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApplicationComponentRecord
     */
    public ApplicationComponentRecord() {
        super(ApplicationComponent.APPLICATION_COMPONENT);
    }

    /**
     * Create a detached, initialised ApplicationComponentRecord
     */
    @ConstructorProperties({ "id", "applicationId" })
    public ApplicationComponentRecord(@Nonnull Long id, @Nullable Long applicationId) {
        super(ApplicationComponent.APPLICATION_COMPONENT);

        setId(id);
        setApplicationId(applicationId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ApplicationComponentRecord
     */
    public ApplicationComponentRecord(com.silo.backend.database.tables.pojos.ApplicationComponent value) {
        super(ApplicationComponent.APPLICATION_COMPONENT);

        if (value != null) {
            setId(value.id());
            setApplicationId(value.applicationId());
            resetChangedOnNotNull();
        }
    }
}
