/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.pojos;


import com.silo.backend.database.tables.interfaces.IPermissionGroupInvolvement;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.processing.Generated;


/**
 * links a group of involvements to a given operation on an entity kind
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "permission_group_involvement"
)
public record PermissionGroupInvolvement(
    @Nonnull Long permissionGroupId,
    @Nullable Long involvementGroupId,
    @Nullable String operation,
    @Nonnull String parentKind,
    @Nullable String subjectKind,
    @Nullable String qualifierKind,
    @Nullable Long qualifierId
) implements IPermissionGroupInvolvement {

    private static final long serialVersionUID = 1L;


    /**
     * Getter for <code>permission_group_involvement.permission_group_id</code>.
     * identifier of the permission group this association is tied to
     */
    @Column(name = "permission_group_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getPermissionGroupId() {
        return this.permissionGroupId;
    }

    /**
     * Getter for
     * <code>permission_group_involvement.involvement_group_id</code>.
     * identifier of the involvement group
     */
    @Column(name = "involvement_group_id")
    @Nullable
    @Override
    public Long getInvolvementGroupId() {
        return this.involvementGroupId;
    }

    /**
     * Getter for <code>permission_group_involvement.operation</code>. type of
     * operation this involvement group is allowed to perform (one of: ADD,
     * ATTEST, REMOVE, UPDATE, UNKNOWN)
     */
    @Column(name = "operation", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getOperation() {
        return this.operation;
    }

    /**
     * Getter for <code>permission_group_involvement.parent_kind</code>. kind of
     * the parent entity the change is related to e.g. APPLICATION
     */
    @Column(name = "parent_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    @Override
    public String getParentKind() {
        return this.parentKind;
    }

    /**
     * Getter for <code>permission_group_involvement.subject_kind</code>. kind
     * of the entity the change acting upon e.g. MEASURABLE_RATING
     */
    @Column(name = "subject_kind", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getSubjectKind() {
        return this.subjectKind;
    }

    /**
     * Getter for <code>permission_group_involvement.qualifier_kind</code>. kind
     * of qualifier entity needed to specify a more specific permission e.g.
     * MEASURABLE_CATEGORY
     */
    @Column(name = "qualifier_kind", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getQualifierKind() {
        return this.qualifierKind;
    }

    /**
     * Getter for <code>permission_group_involvement.qualifier_id</code>.
     * identifier of the qualifier entity needed to specify a more specific
     * permission
     */
    @Column(name = "qualifier_id")
    @Nullable
    @Override
    public Long getQualifierId() {
        return this.qualifierId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PermissionGroupInvolvement other = (PermissionGroupInvolvement) obj;
        if (this.permissionGroupId == null) {
            if (other.permissionGroupId != null)
                return false;
        }
        else if (!this.permissionGroupId.equals(other.permissionGroupId))
            return false;
        if (this.involvementGroupId == null) {
            if (other.involvementGroupId != null)
                return false;
        }
        else if (!this.involvementGroupId.equals(other.involvementGroupId))
            return false;
        if (this.operation == null) {
            if (other.operation != null)
                return false;
        }
        else if (!this.operation.equals(other.operation))
            return false;
        if (this.parentKind == null) {
            if (other.parentKind != null)
                return false;
        }
        else if (!this.parentKind.equals(other.parentKind))
            return false;
        if (this.subjectKind == null) {
            if (other.subjectKind != null)
                return false;
        }
        else if (!this.subjectKind.equals(other.subjectKind))
            return false;
        if (this.qualifierKind == null) {
            if (other.qualifierKind != null)
                return false;
        }
        else if (!this.qualifierKind.equals(other.qualifierKind))
            return false;
        if (this.qualifierId == null) {
            if (other.qualifierId != null)
                return false;
        }
        else if (!this.qualifierId.equals(other.qualifierId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.permissionGroupId == null) ? 0 : this.permissionGroupId.hashCode());
        result = prime * result + ((this.involvementGroupId == null) ? 0 : this.involvementGroupId.hashCode());
        result = prime * result + ((this.operation == null) ? 0 : this.operation.hashCode());
        result = prime * result + ((this.parentKind == null) ? 0 : this.parentKind.hashCode());
        result = prime * result + ((this.subjectKind == null) ? 0 : this.subjectKind.hashCode());
        result = prime * result + ((this.qualifierKind == null) ? 0 : this.qualifierKind.hashCode());
        result = prime * result + ((this.qualifierId == null) ? 0 : this.qualifierId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PermissionGroupInvolvement (");

        sb.append(permissionGroupId);
        sb.append(", ").append(involvementGroupId);
        sb.append(", ").append(operation);
        sb.append(", ").append(parentKind);
        sb.append(", ").append(subjectKind);
        sb.append(", ").append(qualifierKind);
        sb.append(", ").append(qualifierId);

        sb.append(")");
        return sb.toString();
    }
}
