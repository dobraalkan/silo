/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.records;


import com.silo.backend.database.tables.KeyInvolvementKind;
import com.silo.backend.database.tables.interfaces.IKeyInvolvementKind;

import jakarta.annotation.Nonnull;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * Key Involvement Kind For Entity Kind
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "key_involvement_kind"
)
public class KeyInvolvementKindRecord extends TableRecordImpl<KeyInvolvementKindRecord> implements IKeyInvolvementKind {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>key_involvement_kind.involvement_kind_id</code>.
     */
    public KeyInvolvementKindRecord setInvolvementKindId(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>key_involvement_kind.involvement_kind_id</code>.
     */
    @Column(name = "involvement_kind_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getInvolvementKindId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>key_involvement_kind.entity_kind</code>.
     */
    public KeyInvolvementKindRecord setEntityKind(@Nonnull String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>key_involvement_kind.entity_kind</code>.
     */
    @Column(name = "entity_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    @Override
    public String getEntityKind() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IKeyInvolvementKind from) {
        setInvolvementKindId(from.getInvolvementKindId());
        setEntityKind(from.getEntityKind());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KeyInvolvementKindRecord
     */
    public KeyInvolvementKindRecord() {
        super(KeyInvolvementKind.KEY_INVOLVEMENT_KIND);
    }

    /**
     * Create a detached, initialised KeyInvolvementKindRecord
     */
    @ConstructorProperties({ "involvementKindId", "entityKind" })
    public KeyInvolvementKindRecord(@Nonnull Long involvementKindId, @Nonnull String entityKind) {
        super(KeyInvolvementKind.KEY_INVOLVEMENT_KIND);

        setInvolvementKindId(involvementKindId);
        setEntityKind(entityKind);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised KeyInvolvementKindRecord
     */
    public KeyInvolvementKindRecord(com.silo.backend.database.tables.pojos.KeyInvolvementKind value) {
        super(KeyInvolvementKind.KEY_INVOLVEMENT_KIND);

        if (value != null) {
            setInvolvementKindId(value.involvementKindId());
            setEntityKind(value.entityKind());
            resetChangedOnNotNull();
        }
    }
}
