/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Date;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "database_information"
)
public interface IDatabaseInformation extends Serializable {

    /**
     * Getter for <code>database_information.id</code>.
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>database_information.database_name</code>.
     */
    @Column(name = "database_name", length = 255)
    @Size(max = 255)
    @Nullable
    public String getDatabaseName();

    /**
     * Getter for <code>database_information.instance_name</code>.
     */
    @Column(name = "instance_name", length = 255)
    @Size(max = 255)
    @Nullable
    public String getInstanceName();

    /**
     * Getter for <code>database_information.dbms_vendor</code>.
     */
    @Column(name = "dbms_vendor", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getDbmsVendor();

    /**
     * Getter for <code>database_information.dbms_name</code>.
     */
    @Column(name = "dbms_name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getDbmsName();

    /**
     * Getter for <code>database_information.dbms_version</code>.
     */
    @Column(name = "dbms_version", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    public String getDbmsVersion();

    /**
     * Getter for <code>database_information.external_id</code>.
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    public String getExternalId();

    /**
     * Getter for <code>database_information.end_of_life_date</code>.
     */
    @Column(name = "end_of_life_date")
    @Nullable
    public Date getEndOfLifeDate();

    /**
     * Getter for <code>database_information.lifecycle_status</code>.
     */
    @Column(name = "lifecycle_status", length = 64)
    @Size(max = 64)
    @Nullable
    public String getLifecycleStatus();

    /**
     * Getter for <code>database_information.provenance</code>.
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    public String getProvenance();
}
