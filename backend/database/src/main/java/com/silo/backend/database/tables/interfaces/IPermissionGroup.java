/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * group describing the permissions different involvement kinds have against
 * waltz entities
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "permission_group"
)
public interface IPermissionGroup extends Serializable {

    /**
     * Getter for <code>permission_group.id</code>. unique identifier for this
     * cost record within waltz
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>permission_group.name</code>. name of the permission
     * group
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getName();

    /**
     * Getter for <code>permission_group.external_id</code>. external identifier
     * for this permission group
     */
    @Column(name = "external_id", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Nonnull
    public String getExternalId();

    /**
     * Getter for <code>permission_group.description</code>. longer description
     * to provide more information about this permission group
     */
    @Column(name = "description", length = 4000)
    @Size(max = 4000)
    @Nullable
    public String getDescription();

    /**
     * Getter for <code>permission_group.provenance</code>. origination of this
     * permission group
     */
    @Column(name = "provenance", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    public String getProvenance();

    /**
     * Getter for <code>permission_group.is_default</code>. flag to identify the
     * default permission group
     */
    @Column(name = "is_default")
    @Nullable
    public Boolean getIsDefault();
}
