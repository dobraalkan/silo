/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.pojos;


import com.silo.backend.database.tables.interfaces.IApplicationRelationship;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "application_relationship"
)
public record ApplicationRelationship(
    @Nonnull Long id,
    @Nullable Long relationKind
) implements IApplicationRelationship {

    private static final long serialVersionUID = 1L;


    /**
     * Getter for <code>application_relationship.id</code>.
     */
    @Column(name = "id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>application_relationship.relation_kind</code>.
     */
    @Column(name = "relation_kind")
    @Nullable
    @Override
    public Long getRelationKind() {
        return this.relationKind;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ApplicationRelationship other = (ApplicationRelationship) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.relationKind == null) {
            if (other.relationKind != null)
                return false;
        }
        else if (!this.relationKind.equals(other.relationKind))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.relationKind == null) ? 0 : this.relationKind.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ApplicationRelationship (");

        sb.append(id);
        sb.append(", ").append(relationKind);

        sb.append(")");
        return sb.toString();
    }
}
