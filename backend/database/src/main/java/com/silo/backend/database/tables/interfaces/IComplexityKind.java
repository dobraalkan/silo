/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * complexity can be used to give a decimal score for an entity in waltz against
 * a complexity kind (e.g. Flow Complexity). The complexity kind describes the
 * type of complexity being evaluated.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "complexity_kind"
)
public interface IComplexityKind extends Serializable {

    /**
     * Getter for <code>complexity_kind.id</code>. unique identifier for this
     * complexity kind record within waltz
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>complexity_kind.name</code>. the name of this complexity
     * kind
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getName();

    /**
     * Getter for <code>complexity_kind.description</code>. longer description
     * to provide more information about this complexity kind
     */
    @Column(name = "description", length = 4000)
    @Size(max = 4000)
    @Nullable
    public String getDescription();

    /**
     * Getter for <code>complexity_kind.external_id</code>. external identifier
     * for this complexity kind
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    public String getExternalId();

    /**
     * Getter for <code>complexity_kind.is_default</code>. indicates the
     * complexity kind to be shown on the entity overview by default
     */
    @Column(name = "is_default")
    @Nullable
    public Boolean getIsDefault();
}
