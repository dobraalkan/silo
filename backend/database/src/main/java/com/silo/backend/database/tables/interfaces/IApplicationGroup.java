/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * represents an ad-hoc collection of applications
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "application_group"
)
public interface IApplicationGroup extends Serializable {

    /**
     * Getter for <code>application_group.id</code>.
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>application_group.name</code>. display name for the
     * group
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getName();

    /**
     * Getter for <code>application_group.kind</code>. the type of group (one
     * of: PUBLIC, PRIVATE).  Note, private groups can still be seen, they are
     * merely unlisted in the UI
     */
    @Column(name = "kind", length = 64)
    @Size(max = 64)
    @Nullable
    public String getKind();

    /**
     * Getter for <code>application_group.description</code>. longer description
     * of the group, supports markdown
     */
    @Column(name = "description", length = 1000000000)
    @Size(max = 1000000000)
    @Nullable
    public String getDescription();

    /**
     * Getter for <code>application_group.external_id</code>. external
     * identifier, typically used when creating/syncing groups via external jobs
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    public String getExternalId();

    /**
     * Getter for <code>application_group.is_removed</code>. flag indicating if
     * the group has been deleted
     */
    @Column(name = "is_removed")
    @Nullable
    public Boolean getIsRemoved();

    /**
     * Getter for <code>application_group.is_favourite_group</code>. a favourite
     * group is assigned to each user to allow them to quickly bookmark apps and
     * populate the change calendar on the homepage
     */
    @Column(name = "is_favourite_group")
    @Nullable
    public Boolean getIsFavouriteGroup();
}
