/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.pojos;


import com.silo.backend.database.tables.interfaces.IPermissionGroupEntry;

import jakarta.annotation.Nonnull;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.processing.Generated;


/**
 * entities which have specific permissions which replace the default permission
 * group
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "permission_group_entry"
)
public record PermissionGroupEntry(
    @Nonnull Long entityId,
    @Nonnull Long permissionGroupId,
    @Nonnull String entityKind
) implements IPermissionGroupEntry {

    private static final long serialVersionUID = 1L;


    /**
     * Getter for <code>permission_group_entry.entity_id</code>. the id of the
     * entity being given specific permissions
     */
    @Column(name = "entity_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getEntityId() {
        return this.entityId;
    }

    /**
     * Getter for <code>permission_group_entry.permission_group_id</code>.
     * identifier of the permission group being linked to
     */
    @Column(name = "permission_group_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getPermissionGroupId() {
        return this.permissionGroupId;
    }

    /**
     * Getter for <code>permission_group_entry.entity_kind</code>. the type of
     * the entity being given specific permissions
     */
    @Column(name = "entity_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    @Override
    public String getEntityKind() {
        return this.entityKind;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PermissionGroupEntry other = (PermissionGroupEntry) obj;
        if (this.entityId == null) {
            if (other.entityId != null)
                return false;
        }
        else if (!this.entityId.equals(other.entityId))
            return false;
        if (this.permissionGroupId == null) {
            if (other.permissionGroupId != null)
                return false;
        }
        else if (!this.permissionGroupId.equals(other.permissionGroupId))
            return false;
        if (this.entityKind == null) {
            if (other.entityKind != null)
                return false;
        }
        else if (!this.entityKind.equals(other.entityKind))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.entityId == null) ? 0 : this.entityId.hashCode());
        result = prime * result + ((this.permissionGroupId == null) ? 0 : this.permissionGroupId.hashCode());
        result = prime * result + ((this.entityKind == null) ? 0 : this.entityKind.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PermissionGroupEntry (");

        sb.append(entityId);
        sb.append(", ").append(permissionGroupId);
        sb.append(", ").append(entityKind);

        sb.append(")");
        return sb.toString();
    }
}
