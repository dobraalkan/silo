/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.records;


import com.silo.backend.database.tables.ApplicationGroupEntry;
import com.silo.backend.database.tables.interfaces.IApplicationGroupEntry;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * a reference to a specific application in a group
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "application_group_entry"
)
public class ApplicationGroupEntryRecord extends TableRecordImpl<ApplicationGroupEntryRecord> implements IApplicationGroupEntry {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>application_group_entry.group_id</code>. reference to
     * the group this entry belongs to
     */
    public ApplicationGroupEntryRecord setGroupId(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>application_group_entry.group_id</code>. reference to
     * the group this entry belongs to
     */
    @Column(name = "group_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getGroupId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>application_group_entry.application_id</code>. reference
     * to the application this entry refers to
     */
    public ApplicationGroupEntryRecord setApplicationId(@Nonnull Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>application_group_entry.application_id</code>. reference
     * to the application this entry refers to
     */
    @Column(name = "application_id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getApplicationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>application_group_entry.is_readonly</code>. flag to
     * indicate that the value is readonly.  Typically set if group entries are
     * added by external jobs
     */
    public ApplicationGroupEntryRecord setIsReadonly(@Nullable Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>application_group_entry.is_readonly</code>. flag to
     * indicate that the value is readonly.  Typically set if group entries are
     * added by external jobs
     */
    @Column(name = "is_readonly")
    @Nullable
    @Override
    public Boolean getIsReadonly() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>application_group_entry.provenance</code>. indicates
     * where this record originated. Will be 'waltz' if created via the UI
     */
    public ApplicationGroupEntryRecord setProvenance(@Nullable String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>application_group_entry.provenance</code>. indicates
     * where this record originated. Will be 'waltz' if created via the UI
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getProvenance() {
        return (String) get(3);
    }

    /**
     * Setter for <code>application_group_entry.created_at</code>. the date this
     * entry was created, sometimes used to 'age' entries out the group, i.e. in
     * exception lists
     */
    public ApplicationGroupEntryRecord setCreatedAt(@Nullable Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>application_group_entry.created_at</code>. the date this
     * entry was created, sometimes used to 'age' entries out the group, i.e. in
     * exception lists
     */
    @Column(name = "created_at", precision = 6)
    @Nullable
    @Override
    public Timestamp getCreatedAt() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IApplicationGroupEntry from) {
        setGroupId(from.getGroupId());
        setApplicationId(from.getApplicationId());
        setIsReadonly(from.getIsReadonly());
        setProvenance(from.getProvenance());
        setCreatedAt(from.getCreatedAt());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApplicationGroupEntryRecord
     */
    public ApplicationGroupEntryRecord() {
        super(ApplicationGroupEntry.APPLICATION_GROUP_ENTRY);
    }

    /**
     * Create a detached, initialised ApplicationGroupEntryRecord
     */
    @ConstructorProperties({ "groupId", "applicationId", "isReadonly", "provenance", "createdAt" })
    public ApplicationGroupEntryRecord(@Nonnull Long groupId, @Nonnull Long applicationId, @Nullable Boolean isReadonly, @Nullable String provenance, @Nullable Timestamp createdAt) {
        super(ApplicationGroupEntry.APPLICATION_GROUP_ENTRY);

        setGroupId(groupId);
        setApplicationId(applicationId);
        setIsReadonly(isReadonly);
        setProvenance(provenance);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ApplicationGroupEntryRecord
     */
    public ApplicationGroupEntryRecord(com.silo.backend.database.tables.pojos.ApplicationGroupEntry value) {
        super(ApplicationGroupEntry.APPLICATION_GROUP_ENTRY);

        if (value != null) {
            setGroupId(value.groupId());
            setApplicationId(value.applicationId());
            setIsReadonly(value.isReadonly());
            setProvenance(value.provenance());
            setCreatedAt(value.createdAt());
            resetChangedOnNotNull();
        }
    }
}
