/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * defines a particular type of involvement a person may have in relation to an
 * entity (e.g. IT Owner for an APPLICATION)
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "involvement_kind"
)
public interface IInvolvementKind extends Serializable {

    /**
     * Getter for <code>involvement_kind.id</code>.
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>involvement_kind.description</code>. longer textual
     * description of the involvement
     */
    @Column(name = "description", nullable = false, length = 4000)
    @NotNull
    @Size(max = 4000)
    @Nonnull
    public String getDescription();

    /**
     * Getter for <code>involvement_kind.last_updated_at</code>.
     */
    @Column(name = "last_updated_at", precision = 6)
    @Nullable
    public Timestamp getLastUpdatedAt();

    /**
     * Getter for <code>involvement_kind.last_updated_by</code>.
     */
    @Column(name = "last_updated_by", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getLastUpdatedBy();

    /**
     * Getter for <code>involvement_kind.external_id</code>. external
     * identifier, typically used when external jobs are updating the associated
     * involvements
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    public String getExternalId();

    /**
     * Getter for <code>involvement_kind.user_selectable</code>. flag to allow
     * users to add people to an entity with this involvement (set to false to
     * restrict usage, i.e. if involvement is mastered in another system)
     */
    @Column(name = "user_selectable")
    @Nullable
    public Boolean getUserSelectable();

    /**
     * Getter for <code>involvement_kind.subject_kind</code>.
     */
    @Column(name = "subject_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    public String getSubjectKind();

    /**
     * Getter for <code>involvement_kind.name</code>.
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getName();

    /**
     * Getter for <code>involvement_kind.permitted_role</code>.
     */
    @Column(name = "permitted_role", length = 255)
    @Size(max = 255)
    @Nullable
    public String getPermittedRole();
}
