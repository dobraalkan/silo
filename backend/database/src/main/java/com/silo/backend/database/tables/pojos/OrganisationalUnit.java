/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.pojos;


import com.silo.backend.database.tables.interfaces.IOrganisationalUnit;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "organisational_unit"
)
public record OrganisationalUnit(
    @Nonnull Long id,
    @Nullable String name,
    @Nullable String description,
    @Nullable Long parentId,
    @Nullable Timestamp createdAt,
    @Nonnull Timestamp lastUpdatedAt,
    @Nullable String externalId,
    @Nullable String createdBy,
    @Nullable String lastUpdatedBy,
    @Nullable String provenance
) implements IOrganisationalUnit {

    private static final long serialVersionUID = 1L;


    /**
     * Getter for <code>organisational_unit.id</code>.
     */
    @Column(name = "id", nullable = false)
    @NotNull
    @Nonnull
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>organisational_unit.name</code>.
     */
    @Column(name = "name", length = 255)
    @Size(max = 255)
    @Nullable
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>organisational_unit.description</code>.
     */
    @Column(name = "description", length = 4000)
    @Size(max = 4000)
    @Nullable
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>organisational_unit.parent_id</code>.
     */
    @Column(name = "parent_id")
    @Nullable
    @Override
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * Getter for <code>organisational_unit.created_at</code>.
     */
    @Column(name = "created_at", precision = 6)
    @Nullable
    @Override
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>organisational_unit.last_updated_at</code>.
     */
    @Column(name = "last_updated_at", nullable = false, precision = 6)
    @NotNull
    @Nonnull
    @Override
    public Timestamp getLastUpdatedAt() {
        return this.lastUpdatedAt;
    }

    /**
     * Getter for <code>organisational_unit.external_id</code>.
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    @Override
    public String getExternalId() {
        return this.externalId;
    }

    /**
     * Getter for <code>organisational_unit.created_by</code>.
     */
    @Column(name = "created_by", length = 255)
    @Size(max = 255)
    @Nullable
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>organisational_unit.last_updated_by</code>.
     */
    @Column(name = "last_updated_by", length = 255)
    @Size(max = 255)
    @Nullable
    @Override
    public String getLastUpdatedBy() {
        return this.lastUpdatedBy;
    }

    /**
     * Getter for <code>organisational_unit.provenance</code>.
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    @Override
    public String getProvenance() {
        return this.provenance;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OrganisationalUnit other = (OrganisationalUnit) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.lastUpdatedAt == null) {
            if (other.lastUpdatedAt != null)
                return false;
        }
        else if (!this.lastUpdatedAt.equals(other.lastUpdatedAt))
            return false;
        if (this.externalId == null) {
            if (other.externalId != null)
                return false;
        }
        else if (!this.externalId.equals(other.externalId))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.lastUpdatedBy == null) {
            if (other.lastUpdatedBy != null)
                return false;
        }
        else if (!this.lastUpdatedBy.equals(other.lastUpdatedBy))
            return false;
        if (this.provenance == null) {
            if (other.provenance != null)
                return false;
        }
        else if (!this.provenance.equals(other.provenance))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastUpdatedAt == null) ? 0 : this.lastUpdatedAt.hashCode());
        result = prime * result + ((this.externalId == null) ? 0 : this.externalId.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.lastUpdatedBy == null) ? 0 : this.lastUpdatedBy.hashCode());
        result = prime * result + ((this.provenance == null) ? 0 : this.provenance.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OrganisationalUnit (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(parentId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastUpdatedAt);
        sb.append(", ").append(externalId);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(lastUpdatedBy);
        sb.append(", ").append(provenance);

        sb.append(")");
        return sb.toString();
    }
}
