/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "thumbnail"
)
public interface IThumbnail extends Serializable {

    /**
     * Getter for <code>thumbnail.parent_entity_kind</code>.
     */
    @Column(name = "parent_entity_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    public String getParentEntityKind();

    /**
     * Getter for <code>thumbnail.parent_entity_id</code>.
     */
    @Column(name = "parent_entity_id", nullable = false)
    @NotNull
    @Nonnull
    public Long getParentEntityId();

    /**
     * Getter for <code>thumbnail.last_updated_at</code>.
     */
    @Column(name = "last_updated_at", precision = 6)
    @Nullable
    public Timestamp getLastUpdatedAt();

    /**
     * Getter for <code>thumbnail.last_updated_by</code>.
     */
    @Column(name = "last_updated_by", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getLastUpdatedBy();

    /**
     * Getter for <code>thumbnail.mime_type</code>.
     */
    @Column(name = "mime_type", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getMimeType();

    /**
     * Getter for <code>thumbnail.blob</code>.
     */
    @Column(name = "blob", nullable = false, length = 1000000000)
    @NotNull
    @Size(max = 1000000000)
    @Nonnull
    public byte[] getBlob();

    /**
     * Getter for <code>thumbnail.external_id</code>.
     */
    @Column(name = "external_id", length = 200)
    @Size(max = 200)
    @Nullable
    public String getExternalId();

    /**
     * Getter for <code>thumbnail.provenance</code>.
     */
    @Column(name = "provenance", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    public String getProvenance();
}
