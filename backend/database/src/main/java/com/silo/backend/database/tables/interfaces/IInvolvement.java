/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * defines a specific instance of an involvement kind between a person and an
 * entity (e.g. 'User X' is 'IT Owner' for 'APPLICATION/32')
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "involvement"
)
public interface IInvolvement extends Serializable {

    /**
     * Getter for <code>involvement.entity_kind</code>. the kind of entity the
     * person is involved with
     */
    @Column(name = "entity_kind", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    public String getEntityKind();

    /**
     * Getter for <code>involvement.entity_id</code>. the identifier of the
     * entity the person is involved with
     */
    @Column(name = "entity_id", nullable = false)
    @NotNull
    @Nonnull
    public Long getEntityId();

    /**
     * Getter for <code>involvement.employee_id</code>. reference to the person
     * involved with the entity
     */
    @Column(name = "employee_id", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    @Nonnull
    public String getEmployeeId();

    /**
     * Getter for <code>involvement.provenance</code>. where did this
     * involvement record originate, will be 'waltz' if provided via the UI
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    public String getProvenance();

    /**
     * Getter for <code>involvement.kind_id</code>. the type of involvement
     * between the person and the entity (e.g. 'IT Owner')
     */
    @Column(name = "kind_id", nullable = false)
    @NotNull
    @Nonnull
    public Long getKindId();

    /**
     * Getter for <code>involvement.is_readonly</code>. can this involvement be
     * edited/removed by users (e.g. set to true if externally mastered)
     */
    @Column(name = "is_readonly")
    @Nullable
    public Boolean getIsReadonly();
}
