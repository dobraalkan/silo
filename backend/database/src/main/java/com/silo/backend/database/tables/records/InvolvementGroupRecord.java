/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.records;


import com.silo.backend.database.tables.InvolvementGroup;
import com.silo.backend.database.tables.interfaces.IInvolvementGroup;

import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * collection of involvement kinds
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "involvement_group"
)
public class InvolvementGroupRecord extends TableRecordImpl<InvolvementGroupRecord> implements IInvolvementGroup {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>involvement_group.id</code>. unique identifier for this
     * involvement group within waltz
     */
    public InvolvementGroupRecord setId(@Nullable Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group.id</code>. unique identifier for this
     * involvement group within waltz
     */
    @Column(name = "id")
    @Nullable
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>involvement_group.name</code>. name of this involvement
     * group
     */
    public InvolvementGroupRecord setName(@Nonnull String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group.name</code>. name of this involvement
     * group
     */
    @Column(name = "name", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>involvement_group.external_id</code>. external
     * identifier for this involvement group
     */
    public InvolvementGroupRecord setExternalId(@Nonnull String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group.external_id</code>. external
     * identifier for this involvement group
     */
    @Column(name = "external_id", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    @Nonnull
    @Override
    public String getExternalId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>involvement_group.provenance</code>. origination of this
     * involvement group
     */
    public InvolvementGroupRecord setProvenance(@Nonnull String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>involvement_group.provenance</code>. origination of this
     * involvement group
     */
    @Column(name = "provenance", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    @Override
    public String getProvenance() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IInvolvementGroup from) {
        setId(from.getId());
        setName(from.getName());
        setExternalId(from.getExternalId());
        setProvenance(from.getProvenance());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvolvementGroupRecord
     */
    public InvolvementGroupRecord() {
        super(InvolvementGroup.INVOLVEMENT_GROUP);
    }

    /**
     * Create a detached, initialised InvolvementGroupRecord
     */
    @ConstructorProperties({ "id", "name", "externalId", "provenance" })
    public InvolvementGroupRecord(@Nullable Long id, @Nonnull String name, @Nonnull String externalId, @Nonnull String provenance) {
        super(InvolvementGroup.INVOLVEMENT_GROUP);

        setId(id);
        setName(name);
        setExternalId(externalId);
        setProvenance(provenance);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InvolvementGroupRecord
     */
    public InvolvementGroupRecord(com.silo.backend.database.tables.pojos.InvolvementGroup value) {
        super(InvolvementGroup.INVOLVEMENT_GROUP);

        if (value != null) {
            setId(value.id());
            setName(value.name());
            setExternalId(value.externalId());
            setProvenance(value.provenance());
            resetChangedOnNotNull();
        }
    }
}
