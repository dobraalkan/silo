/*
 * This file is generated by jOOQ.
 */
package com.silo.backend.database.tables.interfaces;


import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * a score of a given complexity kind for an entity in waltz
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "complexity"
)
public interface IComplexity extends Serializable {

    /**
     * Getter for <code>complexity.id</code>. unique identifier for this
     * complexity record within waltz
     */
    @Column(name = "id")
    @Nullable
    public Long getId();

    /**
     * Getter for <code>complexity.complexity_kind_id</code>. the reference to
     * the complexity kind that describes this score
     */
    @Column(name = "complexity_kind_id", nullable = false)
    @NotNull
    @Nonnull
    public Long getComplexityKindId();

    /**
     * Getter for <code>complexity.entity_id</code>. the identifier for the
     * entity this score belongs to
     */
    @Column(name = "entity_id", nullable = false)
    @NotNull
    @Nonnull
    public Long getEntityId();

    /**
     * Getter for <code>complexity.entity_kind</code>. the kind of the entity
     * this score belongs to
     */
    @Column(name = "entity_kind", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    @Nonnull
    public String getEntityKind();

    /**
     * Getter for <code>complexity.score</code>. the value of the complexity,
     * the value should fall between 0 and 1 indicating proximity to a baseline
     * (up to 3 decimal places)
     */
    @Column(name = "score", nullable = false, precision = 10, scale = 3)
    @NotNull
    @Nonnull
    public BigDecimal getScore();

    /**
     * Getter for <code>complexity.last_updated_at</code>. the datetime this
     * complexity record was last updated
     */
    @Column(name = "last_updated_at", precision = 6)
    @Nullable
    public Timestamp getLastUpdatedAt();

    /**
     * Getter for <code>complexity.last_updated_by</code>. the last user to
     * update this complexity record
     */
    @Column(name = "last_updated_by", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Nonnull
    public String getLastUpdatedBy();

    /**
     * Getter for <code>complexity.provenance</code>. origination of this change
     * unit record
     */
    @Column(name = "provenance", length = 64)
    @Size(max = 64)
    @Nullable
    public String getProvenance();
}
